合作
领导
	1. 敢于下决定，下任务
	2. 放权/授权
	3. 团队执行力
基础
协作、拒绝、主动、负责、各司其职、通知
任务（收集、日程、跟催）
开会（主题、主持人、记录人、会议记录）；
工作计划
沟通
表达：表述不清，表达不流畅，表达繁琐
倾听
交流
理解
共识

品质
	1. 不急不躁
	2. 严谨
	3. 责任
	4. 事业心
	5. 主动
	6. 提问
	7. 上报问题/风险

QA
详细设计
	1. 考虑数据配置、实用性、兼容性（历史数据）、是否记录
	2. 注意代码可维护性（注释、可读）、实用性、兼容性（IE）
	3. 减少改漏：代码复用性、全局搜索
	4. 参考设计模式
	5. 场景覆盖
自测&自查
	1. 除了需求，至少测一个相关项
	2. 全局搜索查看是否有遗漏
	3. 先按测试用例测试后，才提测
	4. 没有自测的修改=>漏洞百出，不能提交。每次改动的功能需要自测一下
	5. 提交过的代码自查一次
帮测&审查

工作开展
设计
工作
确认
重构

上线/变更
版本控制：涉及需求、涉及bug、代码分支
checklist
打包&上线

教程
1.环境安装文档
2.地址
3.工具
4.规范文档

问题处理流程
1.复现问题
2.测试——记录问题
3.开发——定位修复问题
4.开发——总结复盘

状态管理
闲时/乏味：休息、带薪学习、了解新事物、重构代码
休息：每2h走动一下、保证睡眠
拖延：
零食
状态宗旨：专业、优雅、快乐

项目对接、交接
交流很累，真是要见棺材才落泪
答应后，立即将待办事项登记下来，减少遗漏
分工：开发、测试、需求负责人
测试封板后(uat测试前)，不大改代码
目前没有可行方案，需要调研方案
明确工作内容和边界
文档：开发文档、产品文档
需求澄清会、用例评审会
