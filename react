#App

#组件
##API
render/JSX
1.{}//嵌入代码
2.{/*注释...*/}
3.不支持if-else
4.数组自动咱开
5.内联样式自动添加px
constructor
Props
getDefaultProps():为 props 设置默认值
PropTypes()：Props 验证
setProps
replaceProps
ref
state
getInitialState
setState：修改状态值，每次修改以后，自动调用 this.render 方法，再次渲染组件。
replaceState
forceUpdate
findDOMNode
isMounted：判断组件是否已挂载到DOM中
##生命周期
组件的生命周期可分成三个状态：
Mounting：已插入真实 DOM
Updating：正在被重新渲染
Unmounting：已移出真实 DOM
生命周期的方法有：
componentWillMount 在渲染前调用,在客户端也在服务端。
componentDidMount : 在第一次渲染后调用，只在客户端。之后组件已经生成了对应的DOM结构，可以通过this.getDOMNode()来进行访问。 如果你想和其他JavaScript框架一起使用，可以在这个方法中调用setTimeout, setInterval或者发送AJAX请求等操作(防止异部操作阻塞UI)。
componentWillReceiveProps 在组件接收到一个新的prop时被调用。这个方法在初始化render时不会被调用。
shouldComponentUpdate 返回一个布尔值。在组件接收到新的props或者state时被调用。在初始化时或者使用forceUpdate时不被调用。 
可以在你确认不需要更新组件时使用。
componentWillUpdate在组件接收到新的props或者state但还没有render时被调用。在初始化时不会被调用。
componentDidUpdate 在组件完成更新后立即调用。在初始化时不会被调用。
componentWillUnmount在组件从 DOM 中移除的时候立刻被调用。

#router

#Redux
createStore(
reducer,//state 的计算方法
applyMiddleware()//中间件
)
store.getState()
store.dispatch()
store.subscribe():
常用中间件

#其他
React Native (简称RN)是Facebook开源的跨平台移动应用开发框架
通信方式
1.父组件通过props向子组件传递
2.DeviceEventEmitter
