介绍
angular是基于数据驱动，所以angular适合做数据操作比较繁琐的项目
jquery是基于dom驱动，jquery适合做dom操作多的项目
原先没有分层，初始化、逻辑、视图混在一起。
如果你修改了视图，模型和控制器也会相应更新
常用功能
 解耦应用逻辑、数据模型和视图；
 Ajax服务；
 依赖注入；
 浏览历史（使书签和前进、后退按钮能够像在普通Web应用中一样工作）；
 测试；
AngularJS 提供很好的依赖注入机制。以下5个核心组件用来作为依赖注入：
value
factory
service
provider
Constant

MVC应用
（1）Module&controller：创建模块应用&用于定义应用
var app = angular.module('myApp', []);
（2）ng-app&ng-controller：指明应用&指明控制器
ng-init：初始化模型
{{}}：模型表达式
ng-bind：把变量绑定在内嵌内容innerHtml中。模型表达式把数据绑定到 HTML，这与 ng-bind 指令有异曲同工之妙，区别写在内容中，写在标签中。
ng-bind-html
ng-model：可以将输入域的值与 AngularJS 创建的变量绑定
scope：用于传递应用的域模型对象，可以为scope创建读取方法
1.作用域
2.根作用域：用 rootscope 定义的值，可以在各个 controller 中使用。
*使用Batarang扩展查看

angular.isObject
1.angular.equals()：比较的两个对象或值是相同类型的，而且它们所有的属性都是相等的。
2.angular.copy()：
3.angular.extend()：方法可以把一个或多个对象中的方法和属性传到一个目的对象中，使得这个对象拥有其他对象相同的方法和属性，如果想要保存一个对象的状态，除了可以调用angular.copy()方法外，还可以把一个空对象｛｝作为第一个对象传入
4.angular.merge()：把数据传入A对象，和extend的区别就是merge是深拷贝

传参
$emit(name,args)向parent controller传递event与data
$broadcast(name,args向child controller传递event与data
$on(name,handler) 用于接收event与data
在$on的方法中的event事件参数，其对象的属性和方法如下
事件属性	目的
event.targetScope	发出或者传播原始事件的作用域
event.currentScope	目前正在处理的事件的作用域
event.name	事件名称
event.stopPropagation()	一个防止事件进一步传播(冒泡/捕获)的函数(这只适用于使用`$emit`发出的事件)
event.preventDefault()	这个方法实际上不会做什么事，但是会设置`defaultPrevented`为true。直到事件监听器的实现者采取行动之前它才会检查`defaultPrevented`的值。
event.defaultPrevented	如果调用了`preventDefault`则为true


$watch(watchExpression, [listener], [objectEquality])：
监听参数，监听函数(new,old)，相等比较的方式。
多个参数“+”分割。
第三个参数，它在默认情况下是false。 
当第三个参数是false时，其实watch函数监视的是数组的地址，而数组的内容的变化不会影响数组地址的变化，所以watch函数监视的是数组的地址，而数组的内容的变化不会影响数组地址的变化，所以watch函数失灵了。
取消监听var XXX=$watch; XXX();

过滤器filter
1.过滤器可以使用一个管道字符（|）添加到表达式和指令中，用于转换数据
2.
过滤器	描述
currency	格式化数字为货币格式。
filter输入过滤	从数组项中选择一个子集。Filter:模型
lowercase	格式化字符串为小写。
orderBy	根据某个表达式排列数组。orderBy：''
uppercase	格式化字符串为大写。
3.自定义

指令
Select（ng-option创建下拉列表，ng-repeat创建下拉框）
ng-disabled 指令直接绑定应用程序数据到 HTML 的 disabled 属性。
ng-include
ng-repeat：对集合和数组中重复，相当于foreach.如果ng-repeat绑定的数组中元素有重复，会报错，可使用track by $index
ng-if/ng-show/ng-hide
angular-permission
ng-style
ng-class 指令
1.用于给 HTML 元素动态绑定若干个 CSS 类。ng-hide可以作为css类，
2.方式：字符串，对象，一个数组。
（1）字符串，多个类名使用空格分隔。
（2）对象key-value 对，key 为你想要添加的类名，value 是一个布尔值。只有在 value 为 true 时类才会被添加。
如果是数组，可以由字符串或对象组合组成，数组的元素可以是字符串或对象。

自定义指令
1.angular.module('baymaxEvent').directive(“directiveName”,  directiveFactory)指令名小驼峰，使用名横杆
2.字段
	• restrict：调用指令通过元素名E、属性A、类名C、注释M（须设置replace属性为true）。默认值为 EA。
	• templateUrl/template：对应HTML
	• scope：设置当前指令的作用域。
	1）false(默认值)：不创建新作用域scope，使用父作用域 ；
	2）true：创建新作用域，新作用域继承了父作用域属性和方法；
	3）对象：创建一个孤立作用域，孤立作用域不继承父作用域。
	指令作用域包含两个部分：指令模板的作用域、指令所在DOM的作用域。
	=和@和&
	• replace：是否使用模板替换原有元素。为true时，将会用模板替换指令所在的DOM；为false时，模板会被当作子元素插入到调用此指令的元素内部
	• priority：优先级
	• link：定义指令和作用域连接函数：scope、element、att
	• compile
	• controller：
	• template/tempalteUrl
	• require：需要其他指令的控制器
	• Transclude
	• Priority

组件
Component：templateUrl、bindings、require、transclude、controller

Angular服务
1.服务是一个函数或对象，可在你的 AngularJS 应用中使用。
2.$location：返回当前页面的 URL 地址
 	window.location	$location.service
目的	允许对当前浏览器位置进行读写操作	允许对当前浏览器位置进行读写操作
API	暴露一个能被读写的对象	暴露jquery风格的读写器
是否在AngularJS应用生命周期中和应用整合	否	可获取到应用生命周期内的每一个阶段，并且和$watch整合
是否和HTML5 API的无缝整合	否	是（对低级浏览器优雅降级）
和应用的上下文是否相关	否，window.location.path返回"/docroot/actual/path"	是，$location.path()返回"/actual/path"
$http：服务向服务器发送请求，应用响应服务器传送过来的数据 方法：Method(get/post)参数：url其他}ajax：url、其他、method
$timeout
$interval：setInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。setInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭
$rootScope：根作用域：用 rootscope 定义的值，可以在各个 controller 中使用。
$emit只能向parent controller传递event与data
$broadcast只能向child controller传递event与data
$on用于接收event与data
$q 异步同步处理：$q.deffer()、deferred.notify、Deffer.resolve&deffer.reject、Deffer.promise   Promise.then/catch/finally  $q.all、$q.when一个 Promise 就是一个代表了异步操作最终完成或者失败的对象
$state 路由方法：go() 、reload()、get()
注入器(injector)
自定义服务service函数创建自定义服务+并连接到你的应用上后，你可以在控制器，指令，过滤器或其他服务中使用它

Angular路由
ui-sref：点击跳转
如果要导航到应用程序中不同的页面，但你也希望应用程序做个SPA（单页应用程序），无刷新页面，则可以使用ngRoute模块。
实例解析：
• 1、载入了实现路由的 js 文件：angular-route.js。
• 2、包含了 ngRoute 模块作为主应用模块的依赖模块。
angular.module('routingDemoApp',['ngRoute'])
• 3、使用 ngView 指令。
<div ng-view></div>
该 div 内的 HTML 内容会根据路由的变化而变化。
4、配置 $routeProvider，AngularJS $routeProvider 用来定义路由规则。
module.config(['$routeProvider', function($routeProvider){    
	$routeProvider
	.when(url,{
        template:string, //在ng-view中插入简单的html内容
        templateUrl:string, //在ng-view中插入html模版文件
        controller:string,function / array, //在当前模版上执行的controller函数
        controllerAs:string, //为controller指定别名
       redirectTo:string,function, //重定向的地址
       resolve:object<key,function> //指定当前controller所依赖的其他模块
     });
	 .otherwise({redirectTo:'/'});
}]);
AngularJS 模块的 config 函数用于配置路由规则。通过使用 configAPI，我们请求把$routeProvider注入到我们的配置函数并且使用$routeProvider.whenAPI来定义我们的路由规则。
  $stateProvider     
    .state("home", { //导航用的名字，如<a ui-sref="login">login</a>里的login
        url: '/',    //访问路径 
        template:'<div>模板内容......</div>'
    })



AngularJS 动画
需要引入 angular-animate.min.js 库。
还需在应用中使用模型 ngAnimate：
<body ng-app="ngAnimate">
var app = angular.module('myApp', ['ngAnimate']);

<element ng-switch="expression">
  <element ng-switch-when="value"></element>
  <element ng-switch-default></element>
</element>


小众细节
ng-model 指令也可以：
为应用程序数据提供类型验证（number、email、required）。
为应用程序数据提供状态（invalid、dirty、touched、error）。
为 HTML 元素提供 CSS 类required
ng-model 指令根据表单域的状态添加/移除以下类：
ng-empty
ng-not-empty
ng-touched
ng-untouched
ng-valid
ng-invalid
ng-dirty
ng-pending
ng-pristine
绑定 HTML 元素到 HTML 表单。

命名方式
1.小驼峰
2.驼峰
3.横杠

浅拷贝和深拷贝的问题
1.浅拷贝是别名
2.深拷贝是复制

1.Angular社区
Puls.goole.com/u/0/communities/11536882070087033075
www.angularjs.org
Buildwith.angularjs.org
Batarang
